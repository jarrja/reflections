What happens when you initialize a repository? Why do you need to do it?

    The git is initialized preparing for committing the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    Staging area prepares which document will be committed.

How can you use the staging area to make sure you have one commit per logical
change?

    We compare them by using command git diff, git diff --staged to compare the
    difference that we made and to confirm the change manually first.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branching the flow would be a great idea to implement something that might
    be interesting but not totally related to the masterplan in order to see
    and test without affecting the master plan.

How do the diagrams help you visualize the branch structure?

    Obviously human works better visually. So having a diagram to help
    visualizing the flow of the program is much easier.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Merging two branches result in combining the features introduced in the
    two branches. Also representing it in the diagram makes it easier to
    visualize

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

    The pros of automatic merge is exquisite. We do not have to worry about
    the other context rather than solely on the difference.
